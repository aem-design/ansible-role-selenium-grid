---
- name: Converge
  hosts: instance
  become: true
  vars:
    local_role_name: "ansible-role-selenium-grid"
    role_name: "{% if lookup('env','ROLE_NAME_FULL') %}{{ lookup('env','ROLE_NAME_FULL') }}{% else %}{{ local_role_name }}{% endif %}"
    test_container_name: "{{ local_role_name }}-test-{{ ansible_date_time.iso8601_micro | to_uuid }}"
    test_grid_port: "9944"
    test_node_name_firefox: "node-firefox-test-{{ ansible_date_time.iso8601_micro | to_uuid }}"
    test_node_name_chrome: "node-chrome-test-{{ ansible_date_time.iso8601_micro | to_uuid }}"

  pre_tasks:
    - name: get docker host ip
      become: true
      shell: |
        set -o pipefail
        /sbin/ip route | awk '/default/ { print $3 }'
      args:
        executable: /bin/bash
      register: dockerhost_ip
      changed_when: false

  roles:
    - {
      role: "{{ role_name }}",
      service_selenium_grid_host: "{{ dockerhost_ip.stdout }}",
      service_selenium_grid_http_port: "{{ test_grid_port }}",
      docker_container_name: "{{ test_container_name }}",
      docker_host: "unix://tmp/docker.sock",
      docker_volumes: [],
      docker_published_ports: [
        "{{ test_grid_port }}:4444",
      ],
      debug_hide: false
    }

  post_tasks:
    - name: "start test nodes"
      docker_container:
        docker_host: "unix://tmp/docker.sock"
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        env:
          HUB_HOST: "{{ dockerhost_ip.stdout }}"
          HUB_PORT: "{{ test_grid_port }}"
          NODE_APPLICATION_NAME: "{{ item.name }}"
        volumes:
          - "/dev/shm:/dev/shm"
      loop:
        - { name: "{{ test_node_name_firefox }}", image: "selenium/node-firefox" }
        - { name: "{{ test_node_name_chrome }}", image: "selenium/node-chrome" }
    - name: "wait until test nodes are ready"
      uri:
        url: "http://{{ dockerhost_ip.stdout }}:{{ test_grid_port }}/grid/console"
        return_content: true
        timeout: 300
      register: service_console
      until: test_node_name_firefox in service_console.content
      delay: "{{ wait_delay | default(5) }}"
      retries: 360
      loop:
        - test_node_name_firefox
        - test_node_name_chrome
    - name: "remove test containers"
      docker_container:
        docker_host: "unix://tmp/docker.sock"
        name: "{{ item }}"
        state: "absent"
      loop:
        - test_node_name_firefox
        - test_node_name_chrome
        - test_container_name
